class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>>result=new ArrayList<List<String>>();
        bt(0,s,new ArrayList<String>(),result);
        return result;
        
    }
    public void bt(int start,String s,ArrayList<String>current,List<List<String>>result){
        if(s.length()==start){
            result.add(new ArrayList<String>(current));
        }
        for(int i=start;i<s.length();i++){
            if(isPalindrome(s,start,i)){
                current.add(s.substring(start,i+1));
                bt(i+1,s,current,result);
                current.remove(current.size()-1);
            }
        }
    }
    public boolean isPalindrome(String s,int start,int end){
        while(start<=end){
            if(s.charAt(start)!=s.charAt(end)){
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
    
}