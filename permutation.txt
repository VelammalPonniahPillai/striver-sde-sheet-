class Solution {
    List<List<Integer>>result=new ArrayList<>();
    public List<List<Integer>> permute(int[] nums) {
        if(nums==null || nums.length==0)return result;
        List<Integer>permutation=new ArrayList<>();
        boolean [] used=new boolean[nums.length];
        bt(nums,permutation,used,result);
        return result;
    }
    public void bt(int[]nums,List<Integer>permutation,boolean[]used,List<List<Integer>>result){
        if(permutation.size()==nums.length){
            result.add(new ArrayList<Integer>(permutation));
            return;
        }
        for(int i=0;i<nums.length;i++){
            if(used[i])continue;
            used[i]=true;
            permutation.add(nums[i]);
            bt(nums,permutation,used,result);
            permutation.remove(permutation.size()-1);
            used[i]=false;
        }
    }
}